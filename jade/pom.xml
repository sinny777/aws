<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jade.aws</groupId>
	<artifactId>poc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules>
		<module>jadecore</module>
	</modules>

	<properties>
		<!-- Generic properties -->
		<env>dev</env>
		<jdk.version>1.7</jdk.version>
		<javafx.version>1.6</javafx.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<shadedClassifierName>${env}</shadedClassifierName>
		<spring.version>4.0.3.RELEASE</spring.version>
		<javaee-web-api.version>6.0</javaee-web-api.version>
		<slf4j.version>1.7.7</slf4j.version>

		<!-- Test Dependendcies -->
		<jmockit.version>1.8</jmockit.version>
		<junit.version>4.11</junit.version>
		<h2.version>1.3.171</h2.version>
		<jacoco.version>0.6.4.201312101107</jacoco.version>

		<!-- Sonar config properties - Start -->
		<sonar.jacoco.reportPath>${basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<!-- TODO set Analysis true when SONAR starts working -->
		<sonar.forceAnalysis>true</sonar.forceAnalysis>
		<!-- Sonar config properties - End -->
		<jackson.databind-version>2.2.3</jackson.databind-version>
		<mysql.version>5.1.24</mysql.version>
		<eclipselink.version>2.5.0</eclipselink.version>
		<supercsv.version>2.1.0</supercsv.version>

	</properties>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
				<skipTests>false</skipTests>
				<tomcat.manager.uri>http:/localhost:8080/manager/text</tomcat.manager.uri>
				<tomcat.user>tomcat</tomcat.user>
				<tomcat.password>tomcat</tomcat.password>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<env>test</env>
				<skipTests>false</skipTests>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<env>prod</env>
				<skipTests>true</skipTests>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>poc-${buildNumber}</finalName>
		<defaultGoal>clean compile package</defaultGoal>

		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>${h2.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<dependency>
						<groupId>com.h2database</groupId>
						<artifactId>h2</artifactId>
						<version>${h2.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>org.h2.Driver</driver>
					<username>sa</username>
					<password></password>
				</configuration>

				<executions>
					<execution>
						<id>create-schema-poc</id>
						<phase>test-compile</phase>

						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<url>jdbc:h2:target/db/poc;MODE=mysql</url>
							<srcFiles>
								<srcFile>src/test/resources/database/h2InitializePOC.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.6.2.201302030002</version>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<fork>true</fork>
					<meminitial>1024m</meminitial>
					<maxmem>2024m</maxmem>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-environment</id>
						<phase>clean</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/src/main/resources</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/environment/${env}</directory>
									<filtering>false</filtering>
									<includes>
										<include>intradokeystore.jks</include>
										<include>**/*.jks</include>
										<include>**/*.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<packagingExcludes>
					</packagingExcludes>
					<webResources>
						<resource>
							<directory>${basedir}/src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
						<resource>
							<directory>${basedir}/src/main/resources/environment/${env}</directory>
							<filtering>false</filtering>
							<includes>
								<include>persistence.xml</include>
								<include>**/*.xml</include>
							</includes>
							<targetPath>WEB-INF/classes/META-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.1.2</version>
				<configuration>
					<container>
						<containerId>tomcat7x</containerId>
						<type>remote</type>
					</container>
					<configuration>
						<type>runtime</type>
						<properties>
							<cargo.remote.uri>
								${tomcat.manager.uri}
							</cargo.remote.uri>
							<cargo.remote.username>${tomcat.user}</cargo.remote.username>
							<cargo.remote.password>${tomcat.password}</cargo.remote.password>
						</properties>
					</configuration>
					<deployer>
						<type>remote</type>
						<deployables>
							<deployable>
								<groupId>com.jade.aws</groupId>
								<artifactId>poc</artifactId>
								<type>war</type>
							</deployable>
						</deployables>
					</deployer>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>[1.5,)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>de.empulse.eclipselink</groupId>
										<artifactId>
											staticweave-maven-plugin
										</artifactId>
										<versionRange>
											[1.0.0,)
										</versionRange>
										<goals>
											<goal>weave</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>