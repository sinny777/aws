#Configuration for Connector caseconnector
#Fri Jun 05 00:05:46 PDT 2009
xslt=\=\=
lastsync=20090604122400
azxslt=PD94bWwgdmVyc2lvbj0iMS4wIj8+DQo8eHNsOnN0eWxlc2hlZXQgeG1sbnM6eHNsPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L1hTTC9UcmFuc2Zvcm0iDQoJCQkJeG1sbnM6c29hcGVudj0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS8iDQoJCQkJeG1sbnM6c2Y9InVybjpzb2JqZWN0LmVudGVycHJpc2Uuc29hcC5zZm9yY2UuY29tIg0KCQkJCXhtbG5zOmphdmE9Imh0dHA6Ly94bWwuYXBhY2hlLm9yZy94c2x0L2phdmEiIHZlcnNpb249IjEuMCI+DQogPHhzbDpvdXRwdXQgbWV0aG9kPSJ4bWwiICBvbWl0LXhtbC1kZWNsYXJhdGlvbj0ibm8iICAvPg0KIA0KIA0KIDx4c2w6dmFyaWFibGUgbmFtZT0ieHNsdHlwZSI+aHR0cHM6Ly9jczIuc2FsZXNmb3JjZS5jb20vPC94c2w6dmFyaWFibGU+DQoNCiANCiA8eHNsOnRlbXBsYXRlIG1hdGNoPSIvIj4NCg0KICAgIDxhemRlY2lzaW9ucyB4c2w6ZXhjbHVkZS1yZXN1bHQtcHJlZml4ZXM9InNmIHNvYXBlbnYgamF2YSI+DQoNCgk8eHNsOmZvci1lYWNoIHNlbGVjdD0iL3NvYXBlbnY6RW52ZWxvcGUvc29hcGVudjpCb2R5LypbbmFtZXNwYWNlLXVyaSgpPSd1cm46ZW50ZXJwcmlzZS5zb2FwLnNmb3JjZS5jb20nIGFuZCAobG9jYWwtbmFtZSgpPSdxdWVyeVJlc3BvbnNlJyBvciBsb2NhbC1uYW1lKCk9J3F1ZXJ5TW9yZVJlc3BvbnNlJykgXS8qW25hbWVzcGFjZS11cmkoKT0ndXJuOmVudGVycHJpc2Uuc29hcC5zZm9yY2UuY29tJyBhbmQgbG9jYWwtbmFtZSgpPSdyZXN1bHQnXS8qW25hbWVzcGFjZS11cmkoKT0ndXJuOmVudGVycHJpc2Uuc29hcC5zZm9yY2UuY29tJyBhbmQgbG9jYWwtbmFtZSgpPSdyZWNvcmRzJ10iPiANCiAgICAgIAkJPGRvY0lEPjx4c2w6dmFsdWUtb2YgZGlzYWJsZS1vdXRwdXQtZXNjYXBpbmc9InllcyIgc2VsZWN0PSJzZjpJZCIvPjwvZG9jSUQ+ICAgICAgICAgICANCiAgICAgIDwveHNsOmZvci1lYWNoPg0KDQogICAgPC9hemRlY2lzaW9ucz4NCiAgIDwveHNsOnRlbXBsYXRlPg0KICAgDQo8L3hzbDpzdHlsZXNoZWV0Pg0KDQo\=
googleWorkDir=/apps/tomcat/apache-tomcat-6.0.18/webapps/connector-manager/WEB-INF
googlePropertiesVersion=2
username=
schedule=0 0/30 * * * ?
googleConnectorWorkDir=/apps/tomcat/apache-tomcat-6.0.18/webapps/connector-manager/WEB-INF/connectors/salesforce-connector/caseconnector
query=SELECT c.AccountId, c.Description, c.CaseNumber, c.ContactId, c.CreatedDate, c.Id, c.ParentId, c.Product__c, c.ProductLine__c, c.Reason, c.RecordTypeId, c.ServiceLevelName__c, c.Severity__c, c.Status, c.Subject, c.SuppliedEmail, c.Support_Status__c, c.Type, c.Contact.Name, c.Account.Name,c.lastModifiedDate, c.Asset.Id, c.Asset.Name, OwnerId, Owner.alias, (Select CommentBody, CreatedDate, Id, ParentId From CaseComments),  (Select CaseId, Id, SolutionId From CaseSolutions),  (Select ActivityId, FromAddress, HtmlBody, Id, ParentId, Subject, TextBody, ToAddress, CcAddress, CreatedDate From EmailMessages), (SELECT IssueId__c, System__c, Type__c From RelatedIssue__r), (Select AccountId, ActivityDate, CreatedById, Description, Id, Subject, WhatId, WhoId From Events),  (Select CreatedDate, NewValue, OldValue From Histories) FROM Case c  WHERE  c.ProductLine__c in ('blah')  and createdDate>2009-04-01T00\:00\:00Z   and lastModifiedDate>$LAST_SYNC_DATE
loginsrv=https\://test.salesforce.com/services/Soap/c/10.0
azquery=select case.ID from case where case.ID in ($DOCIDS)
password= 